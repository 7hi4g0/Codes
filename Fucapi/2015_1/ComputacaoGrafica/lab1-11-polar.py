#!/usr/bin/env python2.7

from math import *

from OpenGL.GL import *
from OpenGL.GLUT import *

try:
    from shapes import *
except ImportError:
    print >> sys.stderr, 'O arquivo "shapes.py" eh necessario neste diretorio.'
    print >> sys.stderr, 'Baixe a versao mais nova do site https://prof.vilarneto.com/cg .'
    sys.exit(1)


mostraDesenhoFinal = True


def draw():
    # Limpeza da tela
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
    glLoadIdentity()

    glScale(0.05, 0.05, 1)
    desenhaGrade(-20, 20, -20, 20)

    # --- Inicio do desenho da tela ---

    if mostraDesenhoFinal:
	glColor(1, 0, 0)   # Seta cor = vermelho
	glLineWidth(3)     # Seta linha com largura mais grossa
	desenhaCamerasDesejadas()

    glColor(0, 1, 0)   # Seta cor = verde
    glLineWidth(1)     # Seta linha com largura comum

    # === ALUNOS DEVEM ALTERAR O CODIGO A PARTIR DAQUI ===

    for angulo in range(0, 360, 60):
	glPushMatrix()  # Salva transformacoes atuais

        glRotate(angulo, 0, 0, 1)
        glTranslated(12, 0, 0)
        glRotated(-angulo, 0, 0, 1)
        glTranslated(-11, -4, 0)
	desenhaCamera()

	glPopMatrix()   # Recupera transformacoes salvas

    # === ALUNOS DEVEM ALTERAR O CODIGO ATE' AQUI ===

    # --- Fim do desenho da tela ---

    # Exibicao da tela que acabou de ser construida
    glutSwapBuffers()


def keyboard(char, x, y):
    global mostraDesenhoFinal

    if char == '\x1b':
        sys.exit(0)

    if char == ' ':
	mostraDesenhoFinal = not mostraDesenhoFinal

    glutPostRedisplay()


def desenhaCamerasDesejadas():
    vertexes = [
        [12.000000, 1.440001],
        [11.153587, 1.164985],
        [10.630478, 0.444984],
        [10.630478, -0.444984],
        [11.153587, -1.164985],
        [12.000000, -1.440000],
        [12.846409, -1.164984],
        [13.369520, -0.444984],
        [13.369520, 0.444985],
        [12.846409, 1.164986],
        [8.799999, 2.200000],
        [9.599998, 2.200000],
        [8.799999, 2.600000],
        [9.599998, 2.600000],
        [8.000000, -2.000000],
        [15.000002, -2.000000],
        [8.000000, 2.000000],
        [14.999998, 2.000000],
        [13.000000, 3.000001],
        [11.000000, 3.000000],
        [13.599998, 2.000001],
        [10.399998, 2.000000],
        [12.000000, 1.800001],
        [10.941986, 1.456230],
        [10.288097, 0.556231],
        [10.288097, -0.556231],
        [10.941986, -1.456230],
        [12.000000, -1.799999],
        [13.058014, -1.456230],
        [13.711901, -0.556231],
        [13.711901, 0.556231],
        [13.058012, 1.456231],
        [5.999998, 11.832307],
        [5.153589, 11.557290],
        [4.630478, 10.837291],
        [4.630478, 9.947322],
        [5.153589, 9.227323],
        [5.999998, 8.952306],
        [6.846411, 9.227323],
        [7.369520, 9.947322],
        [7.369520, 10.837291],
        [6.846411, 11.557290],
        [2.799999, 12.592307],
        [3.600000, 12.592307],
        [2.799999, 12.992307],
        [3.600000, 12.992307],
        [1.999998, 8.392306],
        [8.999998, 8.392306],
        [2.000000, 12.392306],
        [8.999998, 12.392306],
        [7.000000, 13.392306],
        [5.000000, 13.392306],
        [7.600000, 12.392306],
        [4.400000, 12.392306],
        [5.999998, 12.192306],
        [4.941984, 11.848536],
        [4.288097, 10.948537],
        [4.288097, 9.836076],
        [4.941984, 8.936076],
        [5.999998, 8.592305],
        [7.058012, 8.936076],
        [7.711901, 9.836076],
        [7.711901, 10.948537],
        [7.058012, 11.848536],
        [-5.999997, 11.832309],
        [-6.846408, 11.557292],
        [-7.369518, 10.837293],
        [-7.369518, 9.947324],
        [-6.846408, 9.227324],
        [-5.999997, 8.952308],
        [-5.153586, 9.227324],
        [-4.630476, 9.947324],
        [-4.630476, 10.837293],
        [-5.153586, 11.557292],
        [-9.199997, 12.592309],
        [-8.399997, 12.592309],
        [-9.199997, 12.992309],
        [-8.399997, 12.992309],
        [-9.999996, 8.392308],
        [-2.999996, 8.392308],
        [-9.999996, 12.392308],
        [-2.999997, 12.392308],
        [-4.999996, 13.392308],
        [-6.999996, 13.392308],
        [-4.399997, 12.392308],
        [-7.599998, 12.392308],
        [-5.999997, 12.192307],
        [-7.058011, 11.848538],
        [-7.711899, 10.948539],
        [-7.711899, 9.836078],
        [-7.058011, 8.936078],
        [-5.999996, 8.592307],
        [-4.941983, 8.936078],
        [-4.288095, 9.836078],
        [-4.288095, 10.948539],
        [-4.941984, 11.848538],
        [5.999994, -8.952301],
        [5.153585, -9.227317],
        [4.630474, -9.947317],
        [4.630474, -10.837286],
        [5.153585, -11.557285],
        [5.999994, -11.832301],
        [6.846407, -11.557285],
        [7.369516, -10.837286],
        [7.369516, -9.947316],
        [6.846407, -9.227316],
        [2.799995, -8.192302],
        [3.599997, -8.192302],
        [2.799995, -7.792302],
        [3.599997, -7.792302],
        [1.999996, -12.392302],
        [8.999994, -12.392301],
        [1.999996, -8.392302],
        [8.999994, -8.392301],
        [6.999994, -7.392301],
        [4.999994, -7.392302],
        [7.599997, -8.392301],
        [4.399996, -8.392302],
        [5.999994, -8.592301],
        [4.941980, -8.936070],
        [4.288094, -9.836071],
        [4.288094, -10.948532],
        [4.941980, -11.848532],
        [5.999994, -12.192301],
        [7.058008, -11.848532],
        [7.711897, -10.948532],
        [7.711897, -9.836070],
        [7.058008, -8.936069],
        [-6.000006, -8.952296],
        [-6.846416, -9.227312],
        [-7.369527, -9.947312],
        [-7.369527, -10.837281],
        [-6.846416, -11.557281],
        [-6.000006, -11.832296],
        [-5.153595, -11.557281],
        [-4.630485, -10.837281],
        [-4.630485, -9.947312],
        [-5.153595, -9.227312],
        [-9.200006, -8.192297],
        [-8.400005, -8.192297],
        [-9.200006, -7.792297],
        [-8.400005, -7.792297],
        [-10.000006, -12.392298],
        [-3.000006, -12.392296],
        [-10.000006, -8.392298],
        [-3.000006, -8.392296],
        [-5.000007, -7.392296],
        [-7.000007, -7.392297],
        [-4.400005, -8.392296],
        [-7.600006, -8.392297],
        [-6.000006, -8.592297],
        [-7.058020, -8.936066],
        [-7.711907, -9.836066],
        [-7.711907, -10.948527],
        [-7.058020, -11.848528],
        [-6.000006, -12.192297],
        [-4.941992, -11.848527],
        [-4.288104, -10.948527],
        [-4.288104, -9.836065],
        [-4.941993, -8.936066],
        [-11.999998, 1.440002],
        [-12.846409, 1.164988],
        [-13.369520, 0.444987],
        [-13.369520, -0.444982],
        [-12.846411, -1.164982],
        [-12.000000, -1.439998],
        [-11.153589, -1.164982],
        [-10.630478, -0.444983],
        [-10.630478, 0.444986],
        [-11.153587, 1.164987],
        [-15.199998, 2.200004],
        [-14.399998, 2.200004],
        [-15.199999, 2.600004],
        [-14.399998, 2.600003],
        [-15.999999, -1.999997],
        [-9.000000, -1.999997],
        [-15.999998, 2.000003],
        [-8.999998, 2.000003],
        [-10.999998, 3.000002],
        [-12.999998, 3.000003],
        [-10.399998, 2.000002],
        [-13.599998, 2.000004],
        [-11.999998, 1.800003],
        [-13.058012, 1.456234],
        [-13.711901, 0.556234],
        [-13.711901, -0.556227],
        [-13.058014, -1.456227],
        [-12.000000, -1.799997],
        [-10.941986, -1.456228],
        [-10.288097, -0.556229],
        [-10.288097, 0.556232],
        [-10.941985, 1.456233],
	]
    edges = [
        [2, 1],
        [3, 2],
        [4, 3],
        [5, 4],
        [6, 5],
        [7, 6],
        [8, 7],
        [9, 8],
        [10, 9],
        [1, 10],
        [13, 11],
        [11, 12],
        [12, 14],
        [14, 13],
        [17, 15],
        [15, 16],
        [16, 18],
        [17, 22],
        [20, 22],
        [19, 20],
        [19, 21],
        [18, 21],
        [24, 23],
        [25, 24],
        [26, 25],
        [27, 26],
        [28, 27],
        [29, 28],
        [30, 29],
        [31, 30],
        [32, 31],
        [23, 32],
        [34, 33],
        [35, 34],
        [36, 35],
        [37, 36],
        [38, 37],
        [39, 38],
        [40, 39],
        [41, 40],
        [42, 41],
        [33, 42],
        [45, 43],
        [43, 44],
        [44, 46],
        [46, 45],
        [49, 47],
        [47, 48],
        [48, 50],
        [49, 54],
        [52, 54],
        [51, 52],
        [51, 53],
        [50, 53],
        [56, 55],
        [57, 56],
        [58, 57],
        [59, 58],
        [60, 59],
        [61, 60],
        [62, 61],
        [63, 62],
        [64, 63],
        [55, 64],
        [66, 65],
        [67, 66],
        [68, 67],
        [69, 68],
        [70, 69],
        [71, 70],
        [72, 71],
        [73, 72],
        [74, 73],
        [65, 74],
        [77, 75],
        [75, 76],
        [76, 78],
        [78, 77],
        [81, 79],
        [79, 80],
        [80, 82],
        [81, 86],
        [84, 86],
        [83, 84],
        [83, 85],
        [82, 85],
        [88, 87],
        [89, 88],
        [90, 89],
        [91, 90],
        [92, 91],
        [93, 92],
        [94, 93],
        [95, 94],
        [96, 95],
        [87, 96],
        [98, 97],
        [99, 98],
        [100, 99],
        [101, 100],
        [102, 101],
        [103, 102],
        [104, 103],
        [105, 104],
        [106, 105],
        [97, 106],
        [109, 107],
        [107, 108],
        [108, 110],
        [110, 109],
        [113, 111],
        [111, 112],
        [112, 114],
        [113, 118],
        [116, 118],
        [115, 116],
        [115, 117],
        [114, 117],
        [120, 119],
        [121, 120],
        [122, 121],
        [123, 122],
        [124, 123],
        [125, 124],
        [126, 125],
        [127, 126],
        [128, 127],
        [119, 128],
        [130, 129],
        [131, 130],
        [132, 131],
        [133, 132],
        [134, 133],
        [135, 134],
        [136, 135],
        [137, 136],
        [138, 137],
        [129, 138],
        [141, 139],
        [139, 140],
        [140, 142],
        [142, 141],
        [145, 143],
        [143, 144],
        [144, 146],
        [145, 150],
        [148, 150],
        [147, 148],
        [147, 149],
        [146, 149],
        [152, 151],
        [153, 152],
        [154, 153],
        [155, 154],
        [156, 155],
        [157, 156],
        [158, 157],
        [159, 158],
        [160, 159],
        [151, 160],
        [162, 161],
        [163, 162],
        [164, 163],
        [165, 164],
        [166, 165],
        [167, 166],
        [168, 167],
        [169, 168],
        [170, 169],
        [161, 170],
        [173, 171],
        [171, 172],
        [172, 174],
        [174, 173],
        [177, 175],
        [175, 176],
        [176, 178],
        [177, 182],
        [180, 182],
        [179, 180],
        [179, 181],
        [178, 181],
        [184, 183],
        [185, 184],
        [186, 185],
        [187, 186],
        [188, 187],
        [189, 188],
        [190, 189],
        [191, 190],
        [192, 191],
        [183, 192],
	]

    desenha(vertexes, edges)


if __name__ == '__main__':
    glutInit(sys.argv)
    glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE | GLUT_DEPTH)

    glutInitWindowPosition(0, 0)
    glutInitWindowSize(600, 600)
    glutCreateWindow("Exercicio de Computacao Grafica")

    glutKeyboardFunc(keyboard)
    glutDisplayFunc(draw)

    glutMainLoop()
